buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://jars.interlis.ch"
        }
        maven {
            url "http://download.osgeo.org/webdav/geotools/"
        }
        mavenCentral()
        jcenter()
    }
}

plugins {
  id "ch.so.agi.gretl" version "1.0.5-SNAPSHOT"
  id "de.undercouch.download" version "3.4.3"
}

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths
import java.nio.file.Files

ext {
    dbUriEdit = "jdbc:postgresql://192.168.50.8/edit"
    dbUserEdit = "ddluser"
    dbPwdEdit = "ddluser"
    dbUriOereb = "jdbc:postgresql://192.168.50.8/edit"
    dbUserOereb = "ddluser"
    dbPwdOereb = "ddluser"

    dbSchemaOerebNutzungsplanungStaging = "arp_npl_oereb_staging" // NPL-Daten in der Edit-DB im ÖREB-Datenmodell 
    dbSchemaOerebStaging = "agi_oereb_staging" // Staging-Schema in der ÖREB-DB für Verifikation ("User Acceptance Test")
    dbSchemaOereb = "agi_oereb" // Finales Schema mit produktiven ÖREB-Daten in der ÖREB-DB. Daten dürfen erst nach Verifikation (=manueller Prozess) hierhin kopiert werden.

    iliModelNutzungsplanung = 'SO_Nutzungsplanung_20171118' // Gefaked mit unserem Nutzungsplanungsmodell.

    // Download-Verzeichnis
    pathToTempFolder = Files.createTempDirectory(Paths.get(System.getProperty("java.io.tmpdir")), "oereb_data_deployment_").toFile().getAbsolutePath()
    pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')

    exportFileName = "ch.so.arp.nutzungsplanung.oereb.xtf"
}

task fubar() {
    doLast {
        println "Hallo Welt."
    }
}

/* 
 * Now this is what we wanna test. Each line/bullet is one pipeline step:
 * 1. Export a dataset.
 * 2. Copy it to???
 * 3. Import it into the staging schema.
 * 4. Waiting for approval.
 * 5. Import it into productive schema.
 * 6. ...
 */
 // TODO: 
 // - What happens with the data in the staging schema if it does not get approved? Delete the dataset in database?

task exportLandUsePlansDataset(type: Ili2pgExport) {
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = iliModelNutzungsplanung
    dbschema = dbSchemaOerebNutzungsplanungStaging
    dataFile = exportFileName
    logFile = "ili2pg.log"
    disableValidation = true
}



